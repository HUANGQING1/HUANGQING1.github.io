{"pages":[{"title":"Tags","date":"2023-11-12T15:29:25.016Z","path":"tags/index.html","text":""},{"title":"About","date":"2023-11-12T15:29:24.992Z","path":"about/index.html","text":""},{"title":"Categories","date":"2023-11-12T15:29:24.992Z","path":"categories/index.html","text":""}],"posts":[{"title":"数据结构","date":"2023-11-13T08:53:57.000Z","path":"blog/1106.html","text":"十大排序 冒泡排序 基础版冒泡排序 思想：遍历要排序的数列，一次比较两个元素，如果顺序错误就交换过来。重复的遍历数列直到没有需要交换，数列就已经排序完成。 时间复杂度O(n^2)，空间复杂度：O(1) 举例 排序：5，8，6，3，9，2，1，7 从小到大 5，8，6，3，9，2，1，7 5&lt;8 不需要交换 5，8，6，3，9，2，1，7 8&gt;6 交换 5，6，8，3，9，2，1，7 8&gt;3 交换 5，6，3，8，9，2，1，7 8&lt;9 不需要交换 5，6，3，8，9，2，1，7 9&gt;2 交换 5，6，3，8，2，9，1，7 9&gt;1 交换 5，6，3，8，2，1，9，7 9&gt;7， 交换 5，6，3，8，2，1，7，9 5，8，6，3，9，2，7，9 5&lt;8 不需要交换 ................................................. 1号优化版冒泡排序 1如果数组本身已经是需要的顺序了，但是冒泡排序还是会继续比较排序，所以可以设置一个标记，如果在一轮排序中，没有发生交换，那么，就认为数组已经排好序了，停止排序 2号优化版冒泡排序 在上述基础上存在一种可能，比如[3，2，1，4，5，6，7，8]，在前面的几轮排序中，有元素交换，但是，右边的大部分元素已经有序了，不需要进行比较排序。所以可以通过设置无序区边界来解决这个问题，将每轮排序的最后一次交换元素的位置设为无序区的边界。 3号优化版冒泡排序（鸡尾酒冒泡排序） 1冒泡排序可能出现这样一种情况：[2，3，4，5，6，7，1，8]，只有一个元素的位置不对，却要经过几轮排序才能排好，所以鸡尾酒排序的元素比较和交换过程是双向的，先从左到右交换，使得最大元素在右边，再从右到左排序，使得最小元素到左边，如此循环往复至排好为止。 123优点：特定条件下，减少排序的回合数缺点：代码量翻倍适用于大部分元素已经有序的情况下。 快速排序 思想 1快速排序则在每一轮挑选一个基准元素，并让其他比它大的元素移动到数列一边，比它小的元素移动到数列的另一边，从而把数列拆解成两个部分。对每个部分都进行上述操作。 具体实现 基准元素如何选择： 12数列的第一个元素随机的选择一个元素 元素交换如何实现： 123456789101112131415161718192021222324单边循环法： 用一个指针标记代表小于基准元素的数列部分的边界， 遍历数组，发现有小于基准元素的，就和边界处的非基准元素对换,移动基准指针。 举例 数列：4 7 6 5 3 2 8 1，基准元素：数列首元素 pivot=4, 4| [7] 6 5 3 2 8 1 pivot=4, 4| 7 [6] 5 3 2 8 1 pivot=4, 4| 7 6 [5] 3 2 8 1 pivot=4, 4| 7 6 5 [3] 2 8 1 交换 pivot=4, 4 3| 6 5 7 [2] 8 1 交换 pivot=4, 4 3 2| 5 7 6 [8] 1 pivot=4, 4 3 2| 5 7 6 8 [1] 交换 pivot=4, 4 3 2 1| 7 6 8 5双边循环法： 左右两边指针不断移动，直至左指针所指元素大于基准元素，右指针所指元素小于基准元素为止，交换两元素，继续移动指针，直至左右指针 相遇，便将数列成功拆为两部分。 举例 数列：4 7 6 5 3 2 8 1，基准元素：数列首元素 pivot=4, [L:4] 7 6 5 3 2 8 [R:1] pivot=4, 4 [L:7] 6 5 3 2 8 [R:1] 交换 pivot=4, 4 1 [L:6] 5 3 2 [R:8] 7 pivot=4, 4 1 [L:6] 5 3 [R:2] 8 7 交换 pivot=4, 4 1 2 [L:5] [R:3] 6 8 7 交换 pivot=4, 4 1 2 3 5 6 8 7 代码 1递归单边循环法实现 1 1 1 参考资料","tags":[],"categories":[]},{"title":"Hello World","date":"2023-11-12T14:13:43.359Z","path":"blog/16107.html","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot;， More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","tags":[],"categories":[]}],"categories":[],"tags":[]}